package com.patel.BookingService.service;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.patel.BookingService.Iservice.IBookingService;
import com.patel.BookingService.config.UserManagementClient;
import com.patel.BookingService.dto.BookinRequest;
import com.patel.BookingService.dto.UserWrapper;
import com.patel.BookingService.model.Booking;
import com.patel.BookingService.repository.BookingRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class BookingService implements IBookingService {

	private final BookingRepository bookingRepository;
	private final UserManagementClient client;
	
	@Override
	public Booking addNewBooking(String token, BookinRequest bookingRequest) {
		
		try {
			ResponseEntity<?> response = client.getProfile(token);
			
			if(response.getStatusCode().is2xxSuccessful()) {
				Object userObject = response.getBody();
				
				if(userObject instanceof UserWrapper) {
					
					UserWrapper user = (UserWrapper) userObject;
					Booking newBooking = Booking.builder()
												.userId(user.getId())
												.showtimeId(bookingRequest.getShowtimeId())
												.createdAt(bookingRequest.getCreatedAt())
												.numTickets(bookingRequest.getNumTickets())
												.build();
					
					return bookingRepository.save(newBooking);
				}
			} 
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

}
